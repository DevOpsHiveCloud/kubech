#
# This script is meant to be sourced in shell config file e.g. ".bashrc" in bash.
#
# Kubech is a simple tool that lets you set contexts/namespaces per shell/terminal.
# That's help you to manage multi Kubernetes cluster at the same time.

#
# Vars.
kube_config_dir=$HOME/.kube/config.d


#
# Usage.
kubech() {
  cat <<EOF
NOTE:
  - The command "kubech" is just a meta for other commands. So kubech does nothing by itself.
  - Short names "kchc/kchn" also available.

USAGE:
  kubechc             : List all contexts
  kubechc <CONTEXT>   : Switch to context <CONTEXT>
  kubechn             : List all namespaces
  kubechn <NAMESPACE> : Switch to namespace <NAMESPACE>
EOF
}


#
# Store original path of kubeconfig.
if [[ -n "${KUBECONFIG}" ]]; then
    kube_config_file_orig="${KUBECONFIG}"
else
    kube_config_file_orig="${HOME}/.kube/config"
fi


#
# General.
if ! [[ -d "${kube_config_dir}" ]]; then
    mkdir -p "${kube_config_dir}"
fi


#
# Generate kubectl config for a single context.
_kubechg () {
    kube_context="${1}"
    kube_namespace="${2:-default}"
    kube_config_file="${kube_context}-${kube_namespace}"
    KUBECONFIG="${HOME}/.kube/config"

    kubectl config view             \
        --minify                    \
        --flatten                   \
        --context="${kube_context}" |
        sed -r 's/((\s+)cluster: .+)/\1\n\2namespace: '"${kube_namespace}"'/g' > \
        "${kube_config_dir}/${kube_config_file}"

    chmod 600 "${kube_config_dir}/${kube_config_file}"
}


#
# Change kubectl context.
kubechc () {
    kube_context="${1}"
    kube_namespace="${2:-default}"
    kube_config_file="${kube_context}-${kube_namespace}"

    if [[ -n "${kube_context}" ]]; then
        _kubechg "${kube_context}" "${kube_namespace}"
        export KUBECONFIG="${kube_config_dir}/${kube_config_file}"
        kubectl config use-context "${kube_context}"
    else
        kubectl config get-contexts --kubeconfig="${kube_config_file_orig}" --no-headers=true -o name
    fi
}

alias kchc='kubechc'

#
# Change kubectl namespace
kubechn () {
    kube_namespace="${1:-default}"
    kube_namespace_all=$(kubectl get namespaces -o=jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')

    if [[ -n ${1} ]]; then
        # Only switch namespace if it exists.
        if echo "${kube_namespace_all}" | grep -qE "^${kube_namespace}$"; then
            kubechc "$(kubectl config current-context)" "${kube_namespace}"
            echo "Switched to namespace \"${kube_namespace}\""
        else
            echo "The namespace \"${kube_namespace}\" doesn't exist"
        fi
    else
        echo "${kube_namespace_all}"
    fi
}

alias kchn='kubechn'
